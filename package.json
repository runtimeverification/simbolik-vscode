{
  "name": "simbolik",
  "displayName": "Simbolik: Solidity Debugger",
  "repository": {
    "type": "github",
    "url": "https://github.com/runtimeverification/simbolik-vscode"
  },
  "author": {
    "name": "Runtime Verification, Inc.",
    "email": "contact@runtimeverification.com"
  },
  "publisher": "runtimeverification",
  "description": "Advanced Solidity and EVM Debugger",
  "version": "10.0.0",
  "engines": {
    "vscode": "^1.79.0"
  },
  "icon": "images/simbolik-icon-light.png",
  "categories": [
    "Debuggers",
    "Programming Languages",
    "Testing"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./build/extension.js",
  "browser": "./build/extension.web.js",
  "contributes": {
    "menus": {
      "editor/title": [
        {
          "command": "simbolik.debug"
        }
      ]
    },
    "languages": [
      {
        "id": "solidity",
        "aliases": [
          "solidity",
          "Solidity"
        ],
        "extensions": [
          ".sol"
        ]
      }
    ],
    "configuration": {
      "title": "Simbolik: Solidity Debugger",
      "properties": {
        "simbolik.api-key": {
          "type": "string",
          "default": "valid-api-key",
          "description": "The API key to authenticate with the simbolik server.",
          "order": 0
        },
        "simbolik.server": {
          "type": "string",
          "default": "wss://beta.simbolik.runtimeverification.com",
          "description": "The websocket URL where the simbolik server is listening. Do not change this unless you are running your own simbolik server.",
          "order": 1
        },
        "simbolik.forge-path": {
          "type": "string",
          "default": "forge",
          "description": "The path to the forge executable. Simbolik uses forge to compile the smart contracts. If forge is not in the PATH, you can set the path here.",
          "order": 2
        },
        "simbolik.autobuild": {
          "type": "string",
          "enum": ["never", "on-change", "always"],
          "default": "on-change",
          "markdownEnumDescriptions": [
            "Never build the project automatically. This is useful when you're using `forge build --watch` to build the project.",
            "Build the project when the source code changes.",
            "Always build the project before every debugging session."
          ],
          "description": "Chose when Simbolik should build the project.",
          "order": 3
        },
        "simbolik.show-sourcemaps": {
          "type": "boolean",
          "default": false,
          "description": "If set to true, the debugger will include sourcemaps in the disassembly view. This is useful when debugging sourcemaps.",
          "order": 7
        },
        "simbolik.auto-open-disassembly-view": {
          "type": "boolean",
          "description": "If set to true, the debugger will automatically open the disassembly view when starting a debugging session.",
          "default": false,
          "order": 8
        },
        "simbolik.json-rpc-url": {
          "type": "string",
          "default": "http://localhost:8545",
          "description": "Attach requests use this URL as the JSON-RPC endpoint. Notice, that the JSON RPC server must be reachable from the simbolik server. `localhost` here refers to the machine where the simbolik server is running.",
          "order": 9
        },
        "simbolik.sourcify-url": {
          "type": "string",
          "description": "Attach requests use this Sourcify endpoint to download the source code of the debugged transaction.",
          "default": "http://localhost:5555",
          "order": 10
        }
      }
    },
    "breakpoints": [
      {
        "language": "solidity"
      }
    ],
    "debuggers": [
      {
        "type": "solidity",
        "label": "Solidity",
        "configurationAttributes": {
          "launch": {
            "required": [
              "file",
              "contractName",
              "methodSignature",
              "jsonRpcUrl",
              "clientMount"
            ],
            "properties": {
              "contractName": {
                "type": "string",
                "description": "The name of the contract to debug."
              },
              "methodSignature": {
                "type": "string",
                "description": "The signature of the method to debug."
              },
              "file": {
                "type": "string",
                "description": "The file containing the smart contract to debug."
              },
              "clientMount": {
                "type": "string",
                "description": "The absolute file system path to the project root."
              },
              "jsonRpcUrl": {
                "type": "string",
                "description": "The URL of the JSON-RPC server."
              },
              "stopAtFirstOpcode": {
                "type": "boolean",
                "description": "If set to true, the debugger will stop at the first opcode.",
                "default": false
              },
              "showSourcemaps": {
                "type": "boolean",
                "description": "If set to true, the debugger will include sourcemaps in the disassembly view.",
                "default": false
              }
            }
          },
          "attach": {
            "required": [
              "txHash",
              "jsonRpcUrl",
              "sourcifyUrl",
              "clientMount"
            ],
            "properties": {
              "txHash": {
                "type": "string",
                "description": "The transaction hash to attach to."
              },
              "jsonRpcUrl": {
                "type": "string",
                "description": "The URL of the JSON-RPC server."
              },
              "sourcifyUrl": {
                "type": "string",
                "description": "The URL of the Sourcify server."
              },
              "stopAtFirstOpcode": {
                "type": "boolean",
                "description": "If set to true, the debugger will stop at the first opcode.",
                "default": false
              },
              "showSourcemaps": {
                "type": "boolean",
                "description": "If set to true, the debugger will include sourcemaps in the disassembly view.",
                "default": false
              },
              "clientMount": {
                "type": "string",
                "description": "The absolute file system path to the project root."
              },
              "chainId": {
                "type": "number",
                "description": "The chain ID of the network."
              }
            }
          }
        }
      }
    ],
    "commands": [
      {
        "command": "simbolik.debug",
        "title": "Debug"
      }
    ],
    "resourceLabelFormatters": [
      {
        "authority": "*",
        "scheme": "simbolik",
        "formatting": {
          "workspaceSuffix": "Simbolik",
          "label": "${scheme}://${authority}${path}",
          "separator": "/"
        }
      }
    ]
  },
  "scripts": {
    "build": "npm run vscode:prepublish",
    "vscode:prepublish": "npm run esbuild-base -- --minify && npm run esbuild-base-web -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts     --bundle --outfile=build/extension.js     --external:vscode --format=cjs --platform=node",
    "esbuild-base-web": "esbuild ./src/extension.web.ts --bundle --outfile=build/extension.web.js --external:vscode --format=cjs --platform=browser --target=es2020 --minify",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "compile": "tsc -p ./tsconfig.json",
    "compile-web": "tsc -p ./tsconfig.web.json",
    "pretest": "npm run compile && npm run lint",
    "lint": "gts lint",
    "test": "node ./out/test/runTest.js",
    "clean": "gts clean",
    "fix": "gts fix",
    "posttest": "npm run lint"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.11.5",
    "@types/vscode": "^1.79.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "esbuild": "^0.20.2",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "gts": "^5.3.0",
    "mocha": "^10.2.0",
    "process": "^0.11.10",
    "ts-loader": "^9.5.1",
    "typescript": "^5.2.0"
  },
  "dependencies": {
    "@solidity-parser/parser": "^0.18.0",
    "@types/ws": "^8.5.10",
    "smol-toml": "^1.2.0",
    "ws": "^8.18.1",
    "vscode-uri": "^3.0.8"
  }
}
